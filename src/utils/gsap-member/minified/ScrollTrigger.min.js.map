{"version":3,"file":"ScrollTrigger.min.js","sources":["../src/ScrollTrigger.js"],"sourcesContent":["/*!\n * ScrollTrigger 3.3.1\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _raf, _request, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp,\n\t_startup = 1,\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 1,\n\t_passThrough = v => v,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getScrollFunc = (element, {s}) => function(value) { return arguments.length ? (element[s] = value) : element[s]; },\n\t_maxScroll = (element, {s, d2}) => (s = \"scroll\" + d2) && _isViewport(element) ? Math.max(_docEl[s], _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2],\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_abs = Math.abs,\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_horizontal = {s: _scrollLeft, p: _left, p2: _Left, os: _right, os2: _Right, d: _width, d2: _Width, a: \"x\", sc: function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0}},\n\t_vertical = {s: _scrollTop, p: _top, p2: _Top, os: _bottom, os2: _Bottom, d: _height, d2: _Height, a: \"y\", op: _horizontal, sc: function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0}},\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => element.style.position = (_getComputedStyle(element).position === \"absolute\") ? \"absolute\" : \"relative\", // if the element already has position: absolute, leave that, otherwise make it position: relative\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t//_isInViewport = element => (element = _getBounds(element)) && !(element.top > (_win.innerHeight || _docEl.clientHeight) || element.bottom < 0 || element.left > (_win.innerWidth || _docEl.clientWidth) || element.right < 0) && element,\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabels = animation => {\n\t\treturn value => {\n\t\t\tlet a = [],\n\t\t\t\tlabels = animation.labels,\n\t\t\t\tduration = animation.duration(),\n\t\t\t\tp;\n\t\t\tfor (p in labels) {\n\t\t\t\ta.push(labels[p] / duration);\n\t\t\t}\n\t\t\treturn gsap.utils.snap(a, value);\n\t\t};\n\t},\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func) => element.addEventListener(type, func, {passive: true}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (relative) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tisViewport = _isViewport(container),\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = isViewport ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + (isScroller && isViewport ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || !isViewport) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type);\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.insertBefore(e, parent.children[0]);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isViewport, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, isViewport, flipped) => {\n\t\tlet vars = {},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? 1 : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start;\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_sync = () => _request || (_request = _raf(_updateAll)),\n\t_onScroll = () => {\n\t\tif (!_request) {\n\t\t\t_request = _raf(_updateAll);\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_onResize = () => !_refreshing && (_getTime() - _lastScrollTime > 200) && _resizeDelay.restart(true), // ignore resizes that occur DURING a scroll as well as those triggered by refresh()\n\t_listeners = {},\n\t_emptyArray = [],\n\t_dispatch = type => (_listeners[type] && _listeners[type].map(f => f())) || _emptyArray,\n\t_refreshAll = force => {\n\t\tlet refreshInits = _dispatch(\"refreshInit\"),\n\t\t\tl = _triggers.length,\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\t_triggers[i].refresh(force !== true);\n\t\t}\n\t\trefreshInits.forEach(result => result && result.render && result.render(-1)); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\t\t_dispatch(\"refresh\");\n\t},\n\t_updateAll = () => {\n\t\tlet l = _triggers.length,\n\t\t\ti = 0,\n\t\t\ttime = _getTime(),\n\t\t\trecordVelocity = time - _time1 >= 50;\n\t\tif (recordVelocity) {\n\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t}\n\t\t\t_time2 = _time1;\n\t\t\t_time1 = time;\n\t\t}\n\t\tfor (; i < l; i++) {\n\t\t\t_triggers[i] && _triggers[i].update(0, recordVelocity);\n\t\t}\n\t\t_request = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\tif (pin.parentNode === spacer) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\t_setState(state);\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t},\n\t_swapPinIn = (pin, spacer, cs) => {\n\t\tif (pin.parentNode !== spacer) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\tpinStyle[_width] = cs[_width];\n\t\t\tpinStyle[_height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\tspacer.appendChild(pin);\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tlet style = state.t.style,\n\t\t\tl = state.length,\n\t\t\ti = 0,\n\t\t\tp, value;\n\t\tfor (; i < l; i +=2) {\n\t\t\tvalue = state[i+1];\n\t\t\tp = state[i];\n\t\t\tif (value) {\n\t\t\t\tstyle[p] = value;\n\t\t\t} else if (style[p]) {\n\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, isViewport, scrollerMax) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet element = _toArray(trigger)[0] || _body,\n\t\t\t\tbounds = _getBounds(element) || {},\n\t\t\t\toffsets = value.split(\" \"),\n\t\t\t\tlocalOffset, globalOffset, display;\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, isViewport, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else if (markerScroller) {\n\t\t\t_positionMarker(markerScroller, scrollerSize, direction, isViewport, true);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tscrollerMax = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, isViewport, (isStart && position > 20) || (!isStart && (isViewport ? Math.max(_body[scrollerMax], _docEl[scrollerMax]) : marker.parentNode[scrollerMax]) <= position + 1)); // marker.style[direction.p] = (value + scrollerSize - (isViewport ? direction.m : 0)) + \"px\";\n\t\t\tif (isViewport) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tisViewport && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\treturn Math.round(value);\n\t},\n\t_prefixExp = /(?:webkit|moz|length)/i,\n\t_reparent = (element, parent) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _isViewport(scroller) ? direction.sc : _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tlastScroll,\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\ttween && tween.kill();\n\t\t\t\tlastScroll = getScroll();\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = value => {\n\t\t\t\t\tif (getScroll() !== lastScroll) { // if the user scrolls, kill the tween!\n\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\t\tvalue = getScroll();\n\t\t\t\t\t} else if (change1) {\n\t\t\t\t\t\tvalue = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n\t\t\t\t\t}\n\t\t\t\t\treturn (lastScroll = Math.round(value));\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\treturn getTween;\n\t};\n\n_horizontal.op = _vertical;\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = 0;\n\t\tthis.vars && this.kill(1); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet direction = vars.horizontal ? _horizontal : _vertical,\n\t\t\t{onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent} = vars,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _toArray(vars.scroller || _win)[0],\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && (once ? \"play\" : vars.toggleActions).split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tself = this,\n\t\t\tsoftRefresh = () => ScrollTrigger.removeEventListener(\"scrollEnd\", softRefresh) || self.refresh(),\n\t\t\tonRefreshInit = vars.onRefreshInit && (() => vars.onRefreshInit(self)),\n\t\t\ttweenTo, pinCache, snapFunc, isReverted, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars, change, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, spacingStart, spacingActive, markerStartSetter, markerEndSetter, cs, snap1, snap2, scrubScrollTime, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, enabled;\n\n\t\tanticipatePin *= 45;\n\t\t_triggers.push(self);\n\t\tself.scroller = scroller;\n\t\tself.scroll = isViewport ? direction.sc : _getScrollFunc(scroller, direction);\n\t\tscroll1 = self.scroll();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\tanimation._initted || (animation.vars.immediateRender !== false && animation.render(0, true, true));\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tscrubSmooth = _isNumber(scrub) && scrub;\n\t\t\tscrubSmooth && (scrubTween = gsap.to(animation, {ease: \"power3\", duration: scrubSmooth, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\t\tif (snap) {\n\t\t\t_isObject(snap) || (snap = {snapTo: snap});\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getLabels(animation) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tif (!_lastScrollTime || (_lastScrollTime === scrubScrollTime && !_pointerIsDown)) {\n\t\t\t\t\tlet totalProgress = animation && !isToggle ? animation.totalProgress() : self.progress,\n\t\t\t\t\t\tvelocity = ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = _abs(velocity / 2) * velocity / 0.185,\n\t\t\t\t\t\tnaturalEnd = totalProgress + change1,\n\t\t\t\t\t\tendValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n\t\t\t\t\t\tchange2 = endValue - totalProgress - change1,\n\t\t\t\t\t\tscroll = self.scroll(),\n\t\t\t\t\t\tendScroll = Math.round(start + endValue * change),\n\t\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\t\tif (scroll <= end && scroll >= start) {\n\t\t\t\t\t\tif (tween && !tween._initted) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\tif (tween.data <= Math.abs(endScroll - scroll)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: Math.abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, start + totalProgress * change, change1 * change, change2 * change);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _toArray(trigger || pin)[0];\n\t\tpin = pin === true ? trigger : _toArray(pin)[0];\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\t\t\tself.pin = pin;\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tpinCache.spacer = spacer = _doc.createElement(\"div\");\n\t\t\t\tspacer.setAttribute(\"class\", \"pin-spacer\" + (id ? \" pin-spacer-\" + id : \"\"));\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tmarkerStart = _createMarker(\"start\", id, scroller, direction, markerVars, offset);\n\t\t\tmarkerEnd =_createMarker(\"end\", id, scroller, direction, markerVars, offset);\n\t\t\tif (!isViewport) {\n\t\t\t\t_makePositionable(scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tself.revert = () => {\n\t\t\tself.update(1); // make sure the pin is back in its original position so that all the measurements are correct.\n\t\t\tpin && _swapPinOut(pin, spacer, pinOriginalState);\n\t\t\tisReverted = 1;\n\t\t}\n\n\n\t\tself.refresh = soft => {\n\t\t\tif (_refreshing || !enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet prevScroll = self.scroll(), // record the scroll so we can revert later (repositioning/pinning things can affect scroll position)\n\t\t\t\tprevProgress = self.progress;\n\t\t\t_refreshing = 1;\n\t\t\tscrubTween && scrubTween.kill();\n\t\t\tinvalidateOnRefresh && animation && animation.progress(0).invalidate().progress(self.progress);\n\t\t\tisReverted || self.revert();\n\t\t\tlet size = (isViewport ? _win[\"inner\" + direction.d2] : scroller[\"client\" + direction.d2]) || 0,\n\t\t\t\tscrollerBounds = isViewport ? _winOffsets : _getBounds(scroller),\n\t\t\t\tmax = _maxScroll(scroller, direction),\n\t\t\t\toffset = 0,\n\t\t\t\tparsedEnd = vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = vars.start || (pin || !trigger ? \"0 0\" : \"0 100%\"),\n\t\t\t\tcs, bounds, scroll, isVertical, override;\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, self.scroll(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, isViewport, max) || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, self.scroll() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, isViewport, max)) || -0.001;\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\t\t\tif (pin) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = (direction === _vertical);\n\t\t\t\tscroll = self.scroll(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a));\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacer.style[pinSpacing + direction.os2] = change + _px;\n\t\t\t\t\tspacingActive = (pinSpacing === _padding) ? _getSize(pin, direction) + change : 0;\n\t\t\t\t\tspacingActive && (spacer.style[direction.d] = spacingActive + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\tisViewport && self.scroll(scroll);\n\t\t\t\t}\n\t\t\t\tif (isViewport) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : 0)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? 0 : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t}\n\t\t\t} else if (trigger && self.scroll()) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tself.scroll() < prevScroll && self.scroll(prevScroll);\n\t\t\tself.update();\n\t\t\t_refreshing = isReverted = 0;\n\t\t\tif (prevProgress !== self.progress) { // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n\t\t\t\tscrubTween && animation.totalProgress(prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\t\t\t\tself.progress = prevProgress;\n\t\t\t\tself.update();\n\t\t\t}\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * change));\n\t\t\tonRefresh && onRefresh(self);\n\t\t};\n\n\t\tself.getVelocity = () => ((self.scroll() - scroll2) / (_getTime() - _time2) * 1000) || 0;\n\n\t\tself.update = (reset, recordVelocity) => {\n\t\t\tlet scroll = self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\t(anticipatePin && !clipped && pin && !_refreshing && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) && (clipped = 0.0001);\n\t\t\tif (clipped !== prevProgress && enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!isViewport) {\n\t\t\t\t\t\tpinSetter(pinStart + change * clipped);\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\taction = scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!_refreshing && (isActive || action)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\tpin.style.top = (bounds.top + (direction === _vertical ? offset : 0)) + _px;\n\t\t\t\t\t\t\t\tpin.style.left = (bounds.left + (direction === _vertical ? 0 : offset)) + _px;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_reparent(pin, !_refreshing && (isActive || action) ? _body : spacer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || action ? pinActiveState : pinState);\n\t\t\t\t\t\tpinSetter(pinStart + (clipped === 1 && !action ? change : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped, !!_refreshing);\n\t\t\t\t\t}\n\t\t\t\t\tonUpdate && !reset && onUpdate(self);\n\t\t\t\t}\n\t\t\t\tif (snap && !tweenTo.tween && !_refreshing && !_startup) {\n\t\t\t\t\tscrubScrollTime = _lastScrollTime;\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress && clipped < 1 ? 0 : clipped === 1 && prevProgress < 1 ? 1 : prevProgress === 1 && clipped > 0 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack\n\t\t\t\t\tif (clipped === 1 && once) {\n\t\t\t\t\t\tself.kill();\n\t\t\t\t\t} else if (isToggle) {\n\t\t\t\t\t\taction = toggleActions[toggleState];\n\t\t\t\t\t\tif (animation && (action === \"complete\" || action === \"reset\" || action in animation)) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\ttoggleClass && toggled && _toArray(toggleClass.targets).forEach(el => el.classList.toggle(toggleClass.className));\n\t\t\t\t\tonToggle && toggled && onToggle(self);\n\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\tonce && (callbacks[toggleState] = 0); // a callback shouldn't be called again if once is true.\n\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tmarkerStartSetter(scroll + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(scroll);\n\t\t\t}\n\t\t};\n\n\t\tself.enable = () => {\n\t\t\tif (!enabled) {\n\t\t\t\tenabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\t_addListener(scroller, \"scroll\", _onScroll);\n\t\t\t\tonRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tanimation && (animation.add ? gsap.delayedCall(0.01, self.refresh) : self.refresh()); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick.\n\t\t\t}\n\t\t};\n\n\t\tself.disable = reset => {\n\t\t\tif (enabled) {\n\t\t\t\tenabled = self.isActive = false;\n\t\t\t\treset !== enabled && self.update(1);\n\t\t\t\tpin && _swapPinOut(pin, spacer, pinOriginalState);\n\t\t\t\tonRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\t_removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = reset => {\n\t\t\tself.disable(reset);\n\t\t\tid && (delete _ids[id]);\n\t\t\t_triggers.splice(_triggers.indexOf(self), 1);\n\t\t\tanimation && (animation.scrollTrigger = null);\n\t\t};\n\n\t\tself.enable();\n\t}\n\n\n\tstatic register(core) {\n\t\tgsap = core || _getGSAP();\n\t\tif (_windowExists() && window.document) {\n\t\t\t_win = window;\n\t\t\t_doc = document;\n\t\t\t_docEl = _doc.documentElement;\n\t\t\t_body = _doc.body;\n\t\t}\n\t\tif (gsap) {\n\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\tgsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\t\t\tif (_body) {\n\t\t\t\t_raf = _win.requestAnimationFrame || (f => setTimeout(f, 16));\n\t\t\t\t_addListener(_win, \"mousewheel\", _onScroll);\n\t\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\t\tlet bodyStyle = _body.style,\n\t\t\t\t\tborder = bodyStyle.borderTop,\n\t\t\t\t\tbounds;\n\t\t\t\tbodyStyle.borderTop = \"1px solid #000\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\t\tbounds = _getBounds(_body);\n\t\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\t\tborder ? (bodyStyle.borderTop = border) : bodyStyle.removeProperty(\"border-top\");\n\t\t\t\t_syncInterval = setInterval(_sync, 100);\n\t\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", () => _pointerIsDown = 1);\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", () => _pointerIsDown = 0);\n\t\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t\t_stateProps.push(_transformProp);\n\t\t\t\t_coreInitted = _getTime();\n\t\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t\t_addListener(_doc, \"visibilitychange\", () => _doc.hidden || _refreshAll());\n\t\t\t\t_addListener(_doc, \"DOMContentLoaded\", _refreshAll);\n\t\t\t\t_addListener(_win, \"load\", () => _lastScrollTime || _refreshAll());\n\t\t\t\t_addListener(_win, \"resize\", _onResize);\n\t\t\t}\n\t\t}\n\t\treturn _coreInitted;\n\t}\n\n\tstatic defaults(config) {\n\t\tfor (let p in config) {\n\t\t\t_defaults[p] = config[p];\n\t\t}\n\t}\n\n\tstatic kill() {\n\t\t_enabled = 0;\n\t\t_triggers.slice(0).forEach(trigger => trigger.kill(1));\n\t}\n\n}\n\nScrollTrigger.version = \"3.3.1\";\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : _refreshAll(true);\nScrollTrigger.update = _updateAll;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => (horizontal = horizontal ? _horizontal : _vertical) && (_isViewport(element) ? horizontal.sc : _getScrollFunc(element, horizontal));\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.slice(0);\nScrollTrigger.syncInterval = ms => clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n};\nScrollTrigger.batch = (targets, vars) => {\n\tlet result = [],\n\t\tvarsCopy = {},\n\t\tinterval = vars.interval || 0.02,\n\t\tbatchMax = vars.batchMax || 1e9,\n\t\tproxyCallback = (type, callback) => {\n\t\t\tlet elements = [],\n\t\t\t\ttriggers = [],\n\t\t\t\tdelay = gsap.delayedCall(interval, () => {callback(elements, triggers); elements = []; triggers = [];}).pause();\n\t\t\treturn self => {\n\t\t\t\telements.length || delay.restart(true);\n\t\t\t\telements.push(self.trigger);\n\t\t\t\ttriggers.push(self);\n\t\t\t\tbatchMax <= elements.length && delay.progress(1);\n\t\t\t};\n\t\t},\n\t\tp;\n\tfor (p in vars) {\n\t\tvarsCopy[p] = (p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\") ? proxyCallback(p, vars[p]) : vars[p];\n\t}\n\tif (_isFunction(batchMax)) {\n\t\tbatchMax = batchMax();\n\t\tScrollTrigger.addEventListener(\"refresh\", () => batchMax = vars.batchMax());\n\t}\n\t_toArray(targets).forEach(target => {\n\t\tlet config = {};\n\t\tfor (p in varsCopy) {\n\t\t\tconfig[p] = varsCopy[p];\n\t\t}\n\t\tconfig.trigger = target;\n\t\tresult.push(ScrollTrigger.create(config));\n\t});\n\treturn result;\n}\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],"names":["_passThrough","v","_windowExists","window","_getGSAP","gsap","registerPlugin","_isViewport","e","_root","indexOf","_getScrollFunc","element","s","value","arguments","length","_maxScroll","d2","Math","max","_docEl","_body","_win","_isString","_isFunction","_isNumber","_isObject","_getComputedStyle","getComputedStyle","_setDefaults","obj","defaults","p","_getBounds","withoutTransforms","tween","_transformProp","to","x","y","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","progress","bounds","getBoundingClientRect","kill","_getSize","_multiListener","func","types","callback","split","forEach","type","_addListener","addEventListener","passive","_removeListener","removeEventListener","_offsetToPx","size","eqIndex","relative","charAt","parseFloat","substr","_keywords","_createMarker","name","container","direction","offset","matchWidthEl","startColor","endColor","fontSize","indent","fontWeight","_doc","createElement","isViewport","isScroller","parent","isStart","color","css","_vertical","_right","_bottom","offsetWidth","_isStart","setAttribute","style","cssText","innerText","insertBefore","children","_offset","op","_positionMarker","_sync","_request","_raf","_updateAll","_onScroll","_lastScrollTime","_dispatch","_getTime","_onResize","_refreshing","_resizeDelay","restart","_refreshAll","force","refreshInits","l","_triggers","i","refresh","result","render","_swapPinOut","pin","spacer","state","parentNode","_setState","removeChild","_swapPinIn","cs","_propNamesToCopy","spacerStyle","pinStyle","position","overflow","boxSizing","_width","_horizontal","_px","_height","_padding","_margin","_top","_left","appendChild","_getState","_stateProps","push","t","_parsePosition","trigger","scrollerSize","scroll","marker","markerScroller","self","scrollerBounds","borderWidth","scrollerMax","localOffset","globalOffset","display","_toArray","offsets","left","top","removeProperty","d","m","round","_getTweenCreator","scroller","lastScroll","getScroll","sc","prop","p2","getTween","scrollTo","vars","initialValue","change1","change2","onComplete","modifiers","ratio","call","_coreInitted","_clamp","_time2","_syncInterval","_pointerIsDown","_startup","Date","now","_time1","_enabled","_abs","abs","_scrollLeft","_scrollTop","_Right","_Left","_Top","_Bottom","_Width","_Height","os","os2","a","pageXOffset","pageYOffset","_markerDefaults","_defaults","toggleActions","anticipatePin","center","bottom","right","start","flipped","side","oppositeSide","_isFlipped","set","_ids","_listeners","_emptyArray","map","f","time","recordVelocity","update","concat","_capsExp","replace","toLowerCase","_winOffsets","_prefixExp","ScrollTrigger","init","animation","this","tweenTo","pinCache","snapFunc","isReverted","scroll1","scroll2","end","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","spacingStart","spacingActive","markerStartSetter","markerEndSetter","snap1","snap2","scrubScrollTime","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","enabled","nodeType","horizontal","onUpdate","toggleClass","id","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","snap","pinReparent","isToggle","scrollerCache","core","getCache","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","softRefresh","onRefreshInit","tweenScroll","lazy","_initted","immediateRender","pause","scrollTrigger","ease","duration","snapTo","_getLabels","labels","utils","min","delayedCall","delay","totalProgress","velocity","naturalEnd","endValue","endScroll","data","targets","className","force3D","getProperty","quickSetter","_makePositionable","revert","soft","prevScroll","prevProgress","invalidate","isVertical","override","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","ceil","width","height","_copyState","omitOffsets","_pinOffset","getVelocity","reset","isActive","toggleState","action","stateChanged","toggled","clipped","_reparent","_stOrig","test","el","classList","toggle","enable","add","disable","splice","register","document","documentElement","body","toArray","clamp","globals","requestAnimationFrame","setTimeout","bodyStyle","border","borderTop","setInterval","checkPrefix","hidden","config","slice","console","warn","version","create","safe","maxScroll","getScrollFunc","getById","getAll","syncInterval","ms","clearInterval","isScrolling","batch","proxyCallback","elements","triggers","interval","batchMax","varsCopy","target"],"mappings":"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"}